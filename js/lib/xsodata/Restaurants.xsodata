service {
    "restaurants.db::RestaurantsContext.Restaurant" 
	  as "Restaurants"
	  navigates ("RestaurantToOrders"             as "Orders",
				"RestaurantToCategories" as "Categories",
				"RestaurantToStaff" as "Staff")
	  create events( before "xsjslib:Restaurant.xsjslib::BeforeCreate");

	
	association "RestaurantToProducts"
	principal "Restaurants"("RestaurantId")
	multiplicity "1"
	dependent "Products"("RestaurantId")
	multiplicity "*";
	
	association "RestaurantToCategories"
	principal "Restaurants"("RestaurantId")
	multiplicity "1"
	dependent "Categories"("RestaurantId")
	multiplicity "*";
	
	association "RestaurantToOrderItems"
	principal "Restaurants"("RestaurantId")
	multiplicity "1"
	dependent "OrderItems"("RestaurantId")
	multiplicity "*";
	
	association "RestaurantToOrders"
	principal "Restaurants"("RestaurantId")
	multiplicity "1"
	dependent "Orders"("RestaurantId")
	multiplicity "*";

	
	association "RestaurantToCategories"
	principal "Restaurants"("RestaurantId")
	multiplicity "1"
	dependent "Categories"("RestaurantId")
	multiplicity "*";
	
	"restaurants.db::RestaurantsContext.RestaurantStaff" 
    as "RestaurantStaff";
	
	"restaurants.db::RestaurantsContext.Staff" 
    as "Staff"
    navigates ("StaffToRestaurant"            as "Restaurants")
    create events (before "xsjslib:Staff.xsjslib::BeforeCreate");
	
	 association "RestaurantToStaff" 
        principal "Restaurants"("RestaurantId") multiplicity "*" 
        dependent "Staff"("StaffId") multiplicity "*"
        over "restaurants.db::RestaurantsContext.RestaurantStaff" principal ("Restaurant.RestaurantId") dependent ("Staff.StaffId");
        
	association "StaffToRestaurant" 
        principal "Staff"("StaffId") multiplicity "*" 
        dependent "Restaurants"("RestaurantId") multiplicity "*"
        over "restaurants.db::RestaurantsContext.RestaurantStaff" principal ("Staff.StaffId") dependent ("Restaurant.RestaurantId");
        

	
	"restaurants.db::RestaurantsContext.RestaurantOrder" as "Orders" 
	navigates ("OrderToStatus" as "Status",
	"OrderToCustomer" as "Customer",
	"OrderToOrderItems" as "Items") 
	create events (before "xsjslib:RestaurantOrder.xsjslib::BeforeCreate");
	
	association "OrderToStatus"
	principal "Orders"("Status.StatusId")
	multiplicity "1"
	dependent "Statuses"("StatusId")
	multiplicity "1";
	
	association "OrderToCustomer"
	principal "Orders"("Customer.CustomerId")
	multiplicity "1"
	dependent "Customers"("CustomerId")
	multiplicity "1";
	
	association "OrderToOrderItems"
	principal "Orders"("RestaurantId","RestaurantOrderId")
	multiplicity "1"
	dependent "OrderItems"("RestaurantId","RestaurantOrderId")
	multiplicity "*";
	
	"restaurants.db::RestaurantsContext.RestaurantOrderItem" as "OrderItems" 
	navigates ("OrderItemToOrder" as "Order",
	"OrderItemToProduct" as "OrderProduct")
	create events (before "xsjslib:RestaurantOrderItem.xsjslib::BeforeCreate");

	association "OrderItemToOrder"
	principal "OrderItems"("RestaurantId","RestaurantOrderId")
	multiplicity "1"
	dependent "Orders"("RestaurantId","RestaurantOrderId")
	multiplicity "1";
	
	association "OrderItemToProduct"
	principal "OrderItems"("Product")
	multiplicity "1"
	dependent "Products"("ProductId")
	multiplicity "1";
	
	"restaurants.db::RestaurantsContext.Product" 
	as "Products" navigates ("ProductToCategory" as "Category")
	create events (before "xsjslib:Product.xsjslib::BeforeCreate");
	
	association "ProductToCategory"
	principal "Products"("Category.CategoryId")
	multiplicity "1"
	dependent "Categories"("CategoryId")
	multiplicity "1";
	
	
	"restaurants.db::RestaurantsContext.Category" 
	as "Categories" 
	navigates ("CategoryToCategories" as "Categories",
			   "CategoryToProducts" as "Products")
			   create events( before "xsjslib:Category.xsjslib::BeforeCreate" );
	
	association "CategoryToCategories"
	principal "Categories"("RestaurantId","CategoryId")
	multiplicity "1"
	dependent "Categories"("RestaurantId","ParentCategory.CategoryId")
	multiplicity "*";
	
	association "CategoryToProducts"
	principal "Categories"("RestaurantId","CategoryId")
	multiplicity "1"
	dependent "Products"("RestaurantId","Category.CategoryId")
	multiplicity "*";
	
	"restaurants.db::RestaurantsContext.Status" 
	as "Statuses";
	
	"restaurants.db::RestaurantsContext.Customer" 
	as "Customers";
     
    
}
settings {

  support null;

}








	

