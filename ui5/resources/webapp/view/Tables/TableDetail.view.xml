<mvc:View controllerName="restaurants.ui5.controller.Tables.TableDetail" xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns:c="sap.suite.ui.commons" xmlns:mvc="sap.ui.core.mvc" displayBlock="true" xmlns="sap.m" xmlns:f="sap.f" xmlns:ux="sap.uxap"
	xmlns:mc="sap.suite.ui.microchart" xmlns:core="sap.ui.core" xmlns:grid="sap.ui.layout.cssgrid">
	<ux:ObjectPageLayout useIconTabBar="true" headerContentPinnable="false">
		<!-- DynamicPage Title -->
		<ux:headerTitle>
			<ux:ObjectPageHeader objectTitle="{i18n>TableGrid_Table} #{restaurants>RestaurantTableId}" isObjectSubtitleAlwaysVisible="false"
				isActionAreaAlwaysVisible="true" showPlaceholder="false">
				<ux:actions>
					<ux:ObjectPageHeaderActionButton type="Transparent" icon="sap-icon://edit" press="onEditTable"/>
					<ux:ObjectPageHeaderActionButton type="Transparent" icon="sap-icon://delete" press="onDeleteTable"/>
					<ux:ObjectPageHeaderActionButton type="Transparent" icon="sap-icon://decline" press="onClose"/>
				</ux:actions>
			</ux:ObjectPageHeader>
		</ux:headerTitle>
		<!-- DynamicPage Header -->
		<ux:headerContent>
			<VBox binding="{restaurants>PendingOrders}" visible="{= ${restaurants>PendingOrders} > 0 }">
				<Label text="{i18n>TableDetail_InPreparationOrders}"/>
				<HBox>
					<ObjectStatus state="Warning" icon="sap-icon://pending"/>
					<ObjectNumber state="Warning" number="{= Number(${restaurants>PendingOrders})}" unit="{i18n>Order}"/>
				</HBox>
			</VBox>
			<VBox >
				<Label text="{i18n>TableDetail_Capacity}"/>
				<HBox>
					<ObjectStatus icon="sap-icon://group"/>
					<ObjectNumber number="{restaurants>Capacity}"/>
				</HBox>
			</VBox>
		</ux:headerContent>
		<!-- DynamicPage Content -->
		<ux:sections>
			<ux:ObjectPageSection title="{i18n>TableDetail_ActiveOrders}" showTitle="true">
				<ux:subSections>
					<ux:ObjectPageSubSection class="sapUiNoContentPadding">
						<f:GridList id="tableOrderList" class="sapUiTinyMarginTop" noDataText="{i18n>NoPendingOrders}"
							items="{path:'restaurants>Orders', parameters:{expand:'Status,Customer,Items'}, filters: { filters: [ {path:'Status.StatusId', operator: 'EQ', value1: 3} ], and: false }, sorter: {path: 'ModifiedAt', descending:true},factory: '.orderItemFactory' }">
							<f:customLayout>
								<grid:GridBoxLayout boxMinWidth="350px"/>
							</f:customLayout>
						</f:GridList>
					</ux:ObjectPageSubSection>
				</ux:subSections>
			</ux:ObjectPageSection>
		</ux:sections>
	</ux:ObjectPageLayout>
</mvc:View>